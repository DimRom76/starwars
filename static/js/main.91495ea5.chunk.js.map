{"version":3,"sources":["components/Navbar.js","components/Person.js","components/People.js","components/Planet.js","components/Planets.js","App.js","index.js"],"names":["Navbar","setPage","onClick","Person","person","className","name","gender","birth_year","fetchPeople","a","pageParam","url","console","log","fetch","res","ok","Error","json","People","useState","useInfiniteQuery","getNextPageParam","lastPage","next","isLoading","error","data","fetchNextPage","hasNextPage","isFetchingNextPage","message","pages","map","group","i","Fragment","results","disabled","Planet","planet","population","terrain","fetchPlanets","queryKey","page","Planets","useQuery","keepPreviousData","isPreviousData","old","Math","max","queryClient","QueryClient","App","QueryClientProvider","client","initialOpen","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91495ea5.chunk.js","sourcesContent":["export default function Navbar({ setPage }) {\r\n  return (\r\n    <nav>\r\n      <button onClick={() => setPage(\"planets\")}>Planet</button>\r\n      <button onClick={() => setPage(\"people\")}>People</button>\r\n    </nav>\r\n  );\r\n}\r\n","const Person = ({ person }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <h3>{person.name}</h3>\r\n      <p>Gender - {person.gender}</p>\r\n      <p>Birth year - {person.birth_year}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import { useInfiniteQuery } from \"react-query\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport Person from \"./Person\";\r\n\r\nconst fetchPeople = async ({ pageParam = null }) => {\r\n  //логика получения новой страницы разная для каждого API\r\n  let url = pageParam;\r\n  if (pageParam === null) {\r\n    url = `http://swapi.dev/api/people/?page=1`;\r\n  }\r\n  console.log(\"pageLoad :>> \", url);\r\n  const res = await fetch(url);\r\n  if (!res.ok) {\r\n    throw new Error(\"Network response was not ok\");\r\n  }\r\n  return res.json();\r\n};\r\n\r\nconst People = () => {\r\n  const [page, setPage] = useState(1);\r\n\r\n  const {\r\n    isLoading,\r\n    error,\r\n    data,\r\n    fetchNextPage,\r\n    hasNextPage,\r\n    isFetchingNextPage,\r\n  } = useInfiniteQuery(\"people\", fetchPeople, {\r\n    getNextPageParam: (lastPage) => {\r\n      //логика получения новой страницы разная для каждого API\r\n      return lastPage.next;\r\n    },\r\n  });\r\n\r\n  if (isLoading) return \"Loading...\";\r\n\r\n  if (error) return \"An error has occurred: \" + error.message;\r\n\r\n  return (\r\n    <div>\r\n      <h2>People</h2>\r\n      <div>\r\n        {data.pages.map((group, i) => (\r\n          <React.Fragment key={i}>\r\n            {group.results.map((person) => (\r\n              <Person key={person.name} person={person} />\r\n            ))}\r\n          </React.Fragment>\r\n        ))}\r\n\r\n        {/* {data.pages.results.map((person) => (\r\n          <Person key={person.name} person={person} />\r\n        ))} */}\r\n      </div>\r\n      <div>\r\n        <button\r\n          onClick={() => fetchNextPage()}\r\n          disabled={!hasNextPage || isFetchingNextPage}\r\n        >\r\n          {isFetchingNextPage\r\n            ? \"Loading more...\"\r\n            : hasNextPage\r\n            ? \"Load More\"\r\n            : \"Nothing more to load\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","const Planet = ({ planet }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <h3>{planet.name}</h3>\r\n      <p>Population - {planet.population}</p>\r\n      <p>Terrain - {planet.terrain}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Planet;\r\n","import { useQuery } from \"react-query\";\r\nimport { useState } from \"react\";\r\nimport Planet from \"./Planet\";\r\n\r\nconst fetchPlanets = async ({ queryKey }) => {\r\n  const [_key, page] = queryKey;\r\n  const res = await fetch(`http://swapi.dev/api/planets/?page=${page}`);\r\n  if (!res.ok) {\r\n    throw new Error(\"Network response was not ok\");\r\n  }\r\n  return res.json();\r\n};\r\n\r\nconst Planets = () => {\r\n  const [page, setPage] = useState(1);\r\n  const { isLoading, error, data, isPreviousData } = useQuery(\r\n    [\"planets\", page],\r\n    fetchPlanets,\r\n    {\r\n      keepPreviousData: true,\r\n    }\r\n  );\r\n\r\n  if (isLoading) return \"Loading...\";\r\n\r\n  if (error) return \"An error has occurred: \" + error.message;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Planets</h2>\r\n      <button\r\n        onClick={() => setPage((old) => Math.max(old - 1, 0))}\r\n        disabled={page === 1}\r\n      >\r\n        Previous Page\r\n      </button>{\" \"}\r\n      <span>Current Page: {page}</span>\r\n      <button\r\n        onClick={() => {\r\n          if (!isPreviousData && data.next) {\r\n            setPage((old) => old + 1);\r\n          }\r\n        }}\r\n        // Disable the Next Page button until we know a next page is available\r\n        disabled={isPreviousData || !data.next}\r\n      >\r\n        Next Page\r\n      </button>\r\n      <div>\r\n        {data.results.map((planet) => (\r\n          <Planet key={planet.name} planet={planet} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Planets;\r\n","import { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport People from \"./components/People\";\nimport Planets from \"./components/Planets\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  const [page, setPage] = useState(\"planets\");\n  return (\n    <QueryClientProvider client={queryClient}>\n      <div className=\"App\">\n        <h1>Star Wars Info</h1>\n        <Navbar setPage={setPage} />\n        <div className=\"context\">\n          {page === \"planets\" ? <Planets /> : <People />}\n        </div>\n      </div>\n      <ReactQueryDevtools initialOpen={false} />\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}